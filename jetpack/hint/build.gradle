if (isBuildModule.toBoolean()) {
    apply plugin: "com.android.application"
} else {
    apply plugin: "com.android.library"
}
apply plugin: "kotlin-android"
apply plugin: "kotlin-kapt"
apply plugin: "dagger.hilt.android.plugin"

android {
    compileSdk rootProject.ext.android.compileSdk

    defaultConfig {
        if (isBuildModule.toBoolean()) {
            applicationId "com.herdin.android.hint"
        }
        minSdk rootProject.ext.android.minSdk
        targetSdk rootProject.ext.android.targetSdk
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = [AROUTER_MODULE_NAME: project.getName()]
//            }
//        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }
    //gradle命名提示机制，让各module中资源名必须按一定前缀规则，有助于防止组件化多module时的资源冲突
    resourcePrefix "hint_"

    sourceSets {
        main {
            if (isBuildModule.toBoolean()) {
                manifest.srcFile 'src/main/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
            }
        }
    }
}
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
    }
}
dependencies {

//    implementation rootProject.ext.dependencie["core_ktx"]
//    implementation rootProject.ext.dependencie["appcompat"]
//    implementation rootProject.ext.dependencie["material"]
//    implementation rootProject.ext.dependencie["constraintlayout"]
//    testImplementation rootProject.ext.dependencie["junit"]
//    androidTestImplementation rootProject.ext.dependencie["ext_junit"]
//    androidTestImplementation rootProject.ext.dependencie["espresso_core"]

//    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
//    implementation 'androidx.lifecycle:lifecycle-runtime:2.3.1'

    api project(path: ':lib:base')
    kapt 'com.alibaba:arouter-compiler:1.5.2'
    implementation 'com.google.dagger:hilt-android:2.37'
    kapt 'com.google.dagger:hilt-android-compiler:2.37'

}